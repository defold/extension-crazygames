local dirtylarry = require "dirtylarry/dirtylarry"

local function log(self, formatstring, ...)
	local s = string.format(formatstring, ...)
	gui.set_text(gui.get_node("log"), s)
	print(s)
end

function init(self)
	msg.post(".", "acquire_input_focus")

	if html5 then
		crazygames.has_ad_block(function(_, blocked)
			log(self, "has_ad_block: %s", tostring(blocked))
		end)

		crazygames.set_auth_listener(function(_, user)
			pprint(user)
			log(self, "user '%s'", (user and user.username or ""))
		end)

		crazygames.request_banner("banner-container", 728, 90)
	else
		log(self, "This example only works on HTML5")
	end
	sound.play("#sound")
end

local function on_midgame_ad_finished(self, success)
	-- continue game
	sound.pause("#sound", false)
	log(self, "Midgame finished %s", tostring(success))
end

local function on_rewarded_ad_finished(self, success)
	sound.pause("#sound", false)
	log(self, "Reward finished %s", tostring(success))
end

function on_input(self, action_id, action)
	if not html5 then return end

	dirtylarry:button("gameplaystart", action_id, action, function()
		crazygames.gameplay_start()
		log(self, "Calling crazygames.gameplay_start()")
	end)

	dirtylarry:button("gameplaystop", action_id, action, function()
		crazygames.gameplay_stop()
		log(self, "Calling crazygames.gameplay_stop()")
	end)

	dirtylarry:button("loadingstart", action_id, action, function()
		crazygames.loading_start()
		log(self, "Calling crazygames.loading_start()")
	end)

	dirtylarry:button("loadingstop", action_id, action, function()
		crazygames.loading_stop()
		log(self, "Calling crazygames.loading_stop()")
	end)

	dirtylarry:button("happytime", action_id, action, function()
		crazygames.happytime()
		log(self, "Calling crazygames.happytime()")
	end)

	dirtylarry:button("request_banner", action_id, action, function()
		crazygames.request_banner("banner-container", 728, 90)
		log(self, "Calling crazygames.request_banner()")
	end)

	dirtylarry:button("clear_banner", action_id, action, function()
		crazygames.clear_banner("banner-container")
		log(self, "Calling crazygames.clear_banner()")
	end)
	
	dirtylarry:button("invitebutton", action_id, action, function()
		local link = crazygames.show_invite_button({
			roomId = 12345,
			param1 = "value1",
			param2 = true,
		})
		log(self, "Showing invite button with link\n'%s'", link)
	end)

	dirtylarry:button("invitelink", action_id, action, function()
		local link = crazygames.invite_link({
			roomId = 12345,
			param1 = "value1",
			param2 = true,
		})
		log(self, "Generated invite link\n'%s'", link)
	end)
		
	dirtylarry:button("midgame", action_id, action, function()
		sound.pause("#sound", true)
		crazygames.show_midgame_ad(on_midgame_ad_finished)
		log(self, "Calling crazygames.show_midgame_ad()")
	end)

	dirtylarry:button("reward", action_id, action, function()
		sound.pause("#sound", true)
		crazygames.show_rewarded_ad(on_rewarded_ad_finished)
		log(self, "Calling crazygames.show_rewarded_ad()")
	end)

	dirtylarry:button("cleardata", action_id, action, function()
		crazygames.clear_data()
		log(self, "Calling crazygames.clear_data()")
	end)

	dirtylarry:button("getitem", action_id, action, function()
		local key = "foo"
		local value = crazygames.get_item(key)
		log(self, "crazygames.get_item(\"%s\") = %s", key, tostring(value))
	end)

	dirtylarry:button("setitem", action_id, action, function()
		local key = "foo"
		local value = tostring(math.random())
		crazygames.set_item(key, value)
		log(self, "crazygames.set_item(\"%s\", \"%s\")", key, value)
	end)

	dirtylarry:button("removeitem", action_id, action, function()
		local key = "foo"
		crazygames.remove_item(key)
		log(self, "crazygames.remove_item(\"%s\")", key)
	end)

	dirtylarry:button("get_user", action_id, action, function()
		if crazygames.is_user_account_available() then
			log(self, "crazygames.get_user()")
			crazygames.get_user(function(self, user)
				pprint(user)
				log(self, "user '%s'", (user and user.username or ""))
			end)
		else
			log(self, "user account is not available")
		end
	end)

	dirtylarry:button("get_user_token", action_id, action, function()
		if crazygames.is_user_account_available() then
			log(self, "crazygames.get_user_token()")
			crazygames.get_user_token(function(self, token)
				pprint(user)
				log(self, "token '%s'", token)
			end)
		else
			log(self, "user account is not available")
		end
	end)
	
	dirtylarry:button("show_auth_prompt", action_id, action, function()
		crazygames.show_auth_prompt(function(self, user)
			pprint(user)
			log(self, "user '%s'", (user and user.username or ""))
		end)
		log(self, "crazygames.show_auth_prompt()")
	end)
end
